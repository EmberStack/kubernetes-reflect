{{- if not .Values.cron.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "reflector.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "reflector.labels" . | nindent 4 }}

spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "reflector.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "reflector.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}

    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "reflector.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}

      {{- if .Values.customCaCert }}
      initContainers:
        - name: init-ca
          image: "{{ .Values.initContainerImage.repository }}:{{ .Values.initContainerImage.tag }}"
          command: ["/bin/sh", "-c"]
          args: ["apt-get -qq update && apt-get -qq install -y ca-certificates && update-ca-certificates && cp -rL /etc/ssl/certs/* /ssl-certs/"]
          env:
            - name: DEBIAN_FRONTEND
              value: noninteractive
          volumeMounts:
            - name: custom-ca-cert
              mountPath: /usr/local/share/ca-certificates/rootCACert.crt
              subPath: rootCACert.pem
              readOnly: false
            - name: ssl-certs
              mountPath: /ssl-certs
              readOnly: false
      {{- end }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ES_Serilog__MinimumLevel__Default
              value: {{ .Values.configuration.logging.minimumLevel | quote }}
            - name: ES_Reflector__Watcher__Timeout
              value: {{ .Values.configuration.watcher.timeout | quote }}
            {{- with .Values.extraEnv }}
              {{- toYaml . | nindent 12 }}
            {{- end }}

          {{- if .Values.customCaCert }}
          volumeMounts:
            - name: ssl-certs
              mountPath: /etc/ssl/certs
              readOnly: false
          {{- end }}

          ports:
            - name: http
              containerPort: 25080
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.healthcheck | nindent 12 }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            {{- toYaml .Values.healthcheck | nindent 12 }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- if semverCompare ">= 1.18-0" .Capabilities.KubeVersion.Version }}
          startupProbe:
            {{- toYaml .Values.healthcheck | nindent 12 }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if .Values.customCaCert }}
      volumes:
        - name: custom-ca-cert
          configMap:
            name: {{ .Release.Name }}-custom-ca-cert
        - name: ssl-certs
          emptyDir: {}
      {{- end }}

{{- end }}
